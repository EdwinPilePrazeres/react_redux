{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/UI/ErrorModal.js","hooks/http.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","context/auth-context.js","components/Auth.js","App.js","index.js"],"names":["Card","props","className","children","LoadingIndicator","IngredientForm","React","memo","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","console","log","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","value","onChange","target","loading","IngredientList","ingredients","map","ig","onClick","onRemoveItem","bind","ErrorModal","Fragment","onClose","initialState","error","data","extra","identifier","httpReducer","curHttpState","action","responseData","errorMessage","Error","useHttp","useReducer","httpState","dispatchHttp","clear","useCallback","sendRequest","url","method","body","reqExtra","reqIdentifer","fetch","headers","then","response","json","catch","isLoading","Search","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","clearTimeout","loadedIngredients","key","push","ref","ingredientReducer","currentIngredients","ingredient","filter","ing","Ingredients","userIngredients","dispatch","name","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","JSON","stringify","removeIngredientHandler","ingredientId","ingredientList","useMemo","AuthContext","createContext","isAuth","login","AuthContextProvider","isAuthenticated","setIsAuthenticated","Provider","Auth","authContext","useContext","App","content","ReactDOM","render","document","getElementById"],"mappings":"qVAQeA,G,MAJF,SAAAC,GACX,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,EAAME,aCQvBC,G,MATU,kBACvB,sBAAKF,UAAU,WAAf,UACE,wBACA,wBACA,wBACA,6BC2CWG,G,MA9CQC,IAAMC,MAAK,SAAAN,GAAU,IAAD,EACDO,mBAAS,IADR,mBAClCC,EADkC,KACpBC,EADoB,OAECF,mBAAS,IAFV,mBAElCG,EAFkC,KAEnBC,EAFmB,KAGzCC,QAAQC,IAAI,6BAOZ,OACE,yBAASZ,UAAU,kBAAnB,SACE,cAAC,EAAD,UACE,uBAAMa,SARU,SAAAC,GACpBA,EAAMC,iBACNhB,EAAMiB,gBAAgB,CAAEC,MAAOV,EAAcW,OAAQT,KAMjD,UACE,sBAAKT,UAAU,eAAf,UACE,uBAAOmB,QAAQ,QAAf,kBACA,uBACEC,KAAK,OACLC,GAAG,QACHC,MAAOf,EACPgB,SAAU,SAAAT,GACRN,EAAgBM,EAAMU,OAAOF,aAInC,sBAAKtB,UAAU,eAAf,UACE,uBAAOmB,QAAQ,SAAf,oBACA,uBACEC,KAAK,SACLC,GAAG,SACHC,MAAOb,EACPc,SAAU,SAAAT,GACRJ,EAAiBI,EAAMU,OAAOF,aAIpC,sBAAKtB,UAAU,2BAAf,UACE,wBAAQoB,KAAK,SAAb,4BACCrB,EAAM0B,SAAW,cAAC,EAAD,kBCvBfC,G,MAjBQ,SAAA3B,GAErB,OADAY,QAAQC,IAAI,4BAEV,0BAASZ,UAAU,kBAAnB,UACE,oDACA,6BACGD,EAAM4B,YAAYC,KAAI,SAAAC,GAAE,OACvB,qBAAgBC,QAAS/B,EAAMgC,aAAaC,K,UAAWH,EAAGR,IAA1D,UACE,+BAAOQ,EAAGZ,QACV,iCAAOY,EAAGX,OAAV,SAFOW,EAAGR,cCUPY,G,MAjBI7B,IAAMC,MAAK,SAAAN,GAC5B,OACE,eAAC,IAAMmC,SAAP,WACE,qBAAKlC,UAAU,WAAW8B,QAAS/B,EAAMoC,UACzC,sBAAKnC,UAAU,cAAf,UACE,oDACA,4BAAID,EAAME,WACV,qBAAKD,UAAU,uBAAf,SACE,wBAAQoB,KAAK,SAASU,QAAS/B,EAAMoC,QAArC,8BCVJC,EAAe,CACnBX,SAAS,EACTY,MAAO,KACPC,KAAM,KACNC,MAAO,KACPC,WAAY,MAGRC,EAAc,SAACC,EAAcC,GACjC,OAAQA,EAAOvB,MACb,IAAK,OACH,MAAO,CACLK,SAAS,EACTY,MAAO,KACPC,KAAM,KACNC,MAAO,KACPC,WAAYG,EAAOH,YAEvB,IAAK,WACH,OAAO,2BACFE,GADL,IAEEjB,SAAS,EACTa,KAAMK,EAAOC,aACbL,MAAOI,EAAOJ,QAElB,IAAK,QACH,MAAO,CAAEd,SAAS,EAAOY,MAAOM,EAAOE,cACzC,IAAK,QACH,OAAOT,EACT,QACE,MAAM,IAAIU,MAAM,4BAkDPC,EA9CC,WAAO,IAAD,EACcC,qBAAWP,EAAaL,GADtC,mBACba,EADa,KACFC,EADE,KAGdC,EAAQC,uBAAY,kBAAMF,EAAa,CAAE9B,KAAM,YAAY,IAE3DiC,EAAcD,uBAClB,SAACE,EAAKC,EAAQC,EAAMC,EAAUC,GAC5BR,EAAa,CAAE9B,KAAM,OAAQoB,WAAYkB,IACzCC,MAAML,EAAK,CACTC,OAAQA,EACRC,KAAMA,EACNI,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAjB,GACJM,EAAa,CACX9B,KAAM,WACNwB,aAAcA,EACdL,MAAOkB,OAGVO,OAAM,SAAA3B,GACLa,EAAa,CACX9B,KAAM,QACNyB,aAAc,+BAItB,IAGF,MAAO,CACLoB,UAAWhB,EAAUxB,QACrBa,KAAMW,EAAUX,KAChBD,MAAOY,EAAUZ,MACjBgB,YAAaA,EACbI,SAAUR,EAAUV,MACpBmB,aAAcT,EAAUT,WACxBW,MAAOA,ICdIe,G,MAzDA9D,IAAMC,MAAK,SAAAN,GAAU,IAC1BoE,EAAsBpE,EAAtBoE,kBADyB,EAES7D,mBAAS,IAFlB,mBAE1B8D,EAF0B,KAEXC,EAFW,KAG3BC,EAAWC,mBAHgB,EAIsBxB,IAA/CkB,EAJyB,EAIzBA,UAAW3B,EAJc,EAIdA,KAAMD,EAJQ,EAIRA,MAAOgB,EAJC,EAIDA,YAAaF,EAJZ,EAIYA,MAkC7C,OAhCAqB,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvB,GAAIN,IAAkBE,EAASK,QAAQrD,MAAO,CAC5C,IAAMsD,EACqB,IAAzBR,EAAcS,OACV,GADJ,oCAEiCT,EAFjC,KAGFf,EACE,4EAA8EuB,EAC9E,UAGH,KACH,OAAO,WACLE,aAAaL,MAEd,CAACL,EAAeE,EAAUjB,IAE7BmB,qBAAU,WACR,IAAKP,IAAc5B,GAASC,EAAM,CAChC,IAAMyC,EAAoB,GAC1B,IAAK,IAAMC,KAAO1C,EAChByC,EAAkBE,KAAK,CACrB5D,GAAI2D,EACJ/D,MAAOqB,EAAK0C,GAAK/D,MACjBC,OAAQoB,EAAK0C,GAAK9D,SAGtBiD,EAAkBY,MAEnB,CAACzC,EAAM2B,EAAW5B,EAAO8B,IAG1B,0BAASnE,UAAU,SAAnB,UACGqC,GAAS,cAAC,EAAD,CAAYF,QAASgB,EAArB,SAA6Bd,IACvC,cAAC,EAAD,UACE,sBAAKrC,UAAU,eAAf,UACE,oDACCiE,GAAa,8CACd,uBACEiB,IAAKZ,EACLlD,KAAK,OACLE,MAAO8C,EACP7C,SAAU,SAAAT,GAAK,OAAIuD,EAAiBvD,EAAMU,OAAOF,sBChDvD6D,EAAoB,SAACC,EAAoBzC,GAC7C,OAAQA,EAAOvB,MACb,IAAK,MACH,OAAOuB,EAAOhB,YAChB,IAAK,MACH,MAAM,GAAN,mBAAWyD,GAAX,CAA+BzC,EAAO0C,aACxC,IAAK,SACH,OAAOD,EAAmBE,QAAO,SAAAC,GAAG,OAAIA,EAAIlE,KAAOsB,EAAOtB,MAC5D,QACE,MAAM,IAAIyB,MAAM,2BAgFP0C,EA5EK,WAAO,IAAD,EACYxC,qBAAWmC,EAAmB,IAD1C,mBACjBM,EADiB,KACAC,EADA,OAUpB3C,IAPFkB,EAHsB,EAGtBA,UACA5B,EAJsB,EAItBA,MACAC,EALsB,EAKtBA,KACAe,EANsB,EAMtBA,YACAI,EAPsB,EAOtBA,SACAC,EARsB,EAQtBA,aACAP,EATsB,EAStBA,MAGFqB,qBAAU,WACHP,GAAc5B,GAA0B,sBAAjBqB,EAEhBO,GAAc5B,GAA0B,mBAAjBqB,GACjCgC,EAAS,CACPtE,KAAM,MACNiE,WAAW,aAAGhE,GAAIiB,EAAKqD,MAASlC,KAJlCiC,EAAS,CAAEtE,KAAM,SAAUC,GAAIoC,MAOhC,CAACnB,EAAMmB,EAAUC,EAAcO,EAAW5B,IAE7C,IAAMuD,EAA6BxC,uBAAY,SAAAyC,GAC7CH,EAAS,CAAEtE,KAAM,MAAOO,YAAakE,MACpC,IAEGC,EAAuB1C,uBAAY,SAAAiC,GACvChC,EACE,4EACA,OACA0C,KAAKC,UAAUX,GACfA,EACA,oBAED,CAAChC,IAEE4C,EAA0B7C,uBAC9B,SAAA8C,GACE7C,EAAY,wEAAD,OAC+D6C,EAD/D,SAET,SACA,KACAA,EACA,uBAGJ,CAAC7C,IAGG8C,EAAiBC,mBAAQ,WAC7B,OACE,cAAC,EAAD,CACEzE,YAAa8D,EACb1D,aAAckE,MAGjB,CAACR,EAAiBQ,IAErB,OACE,sBAAKjG,UAAU,MAAf,UACGqC,GAAS,cAAC,EAAD,CAAYF,QAASgB,EAArB,SAA6Bd,IAEvC,cAAC,EAAD,CACErB,gBAAiB8E,EACjBrE,QAASwC,IAGX,oCACE,cAAC,EAAD,CAAQE,kBAAmByB,IAC1BO,SCzFIE,EAAcjG,IAAMkG,cAAc,CAC7CC,QAAQ,EACRC,MAAO,eAmBMC,EAhBa,SAAA1G,GAAU,IAAD,EACWO,oBAAS,GADpB,mBAC5BoG,EAD4B,KACXC,EADW,KAOnC,OACE,cAACN,EAAYO,SAAb,CACEtF,MAAO,CAAEkF,MANQ,WACnBG,GAAmB,IAKaJ,OAAQG,GADxC,SAGG3G,EAAME,YCME4G,G,MAlBF,SAAA9G,GACX,IAAM+G,EAAcC,qBAAWV,GAM/B,OACE,qBAAKrG,UAAU,OAAf,SACE,eAAC,EAAD,WACE,4DACA,2DACA,wBAAQ8B,QATO,WACnBgF,EAAYN,SAQR,2BCDOQ,EAXH,SAAAjH,GACV,IAAM+G,EAAcC,qBAAWV,GAE3BY,EAAU,cAAC,EAAD,IAKd,OAJIH,EAAYP,SACdU,EAAU,cAAC,EAAD,KAGLA,GCPTC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f0a592ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './LoadingIndicator.css';\r\n\r\nconst LoadingIndicator = () => (\r\n  <div className=\"lds-ring\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingIndicator from '../UI/LoadingIndicator';\r\nimport './IngredientForm.css';\r\n\r\nconst IngredientForm = React.memo(props => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  console.log('RENDERING INGREDIENT FORM');\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    props.onAddIngredient({ title: enteredTitle, amount: enteredAmount });\r\n  };\r\n\r\n  return (\r\n    <section className=\"ingredient-form\">\r\n      <Card>\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"title\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={enteredTitle}\r\n              onChange={event => {\r\n                setEnteredTitle(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              value={enteredAmount}\r\n              onChange={event => {\r\n                setEnteredAmount(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"ingredient-form__actions\">\r\n            <button type=\"submit\">Add Ingredient</button>\r\n            {props.loading && <LoadingIndicator />}\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default IngredientForm;\r\n","import React from 'react';\r\n\r\nimport './IngredientList.css';\r\n\r\nconst IngredientList = props => {\r\n  console.log('RENDERING INGREDIENTLIST');\r\n  return (\r\n    <section className=\"ingredient-list\">\r\n      <h2>Loaded Ingredients</h2>\r\n      <ul>\r\n        {props.ingredients.map(ig => (\r\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\r\n            <span>{ig.title}</span>\r\n            <span>{ig.amount}x</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default IngredientList;\r\n","import React from 'react';\r\n\r\nimport './ErrorModal.css';\r\n\r\nconst ErrorModal = React.memo(props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"backdrop\" onClick={props.onClose} />\r\n      <div className=\"error-modal\">\r\n        <h2>An Error Occurred!</h2>\r\n        <p>{props.children}</p>\r\n        <div className=\"error-modal__actions\">\r\n          <button type=\"button\" onClick={props.onClose}>\r\n            Okay\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\nexport default ErrorModal;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data: null,\r\n  extra: null,\r\n  identifier: null\r\n};\r\n\r\nconst httpReducer = (curHttpState, action) => {\r\n  switch (action.type) {\r\n    case 'SEND':\r\n      return {\r\n        loading: true,\r\n        error: null,\r\n        data: null,\r\n        extra: null,\r\n        identifier: action.identifier\r\n      };\r\n    case 'RESPONSE':\r\n      return {\r\n        ...curHttpState,\r\n        loading: false,\r\n        data: action.responseData,\r\n        extra: action.extra\r\n      };\r\n    case 'ERROR':\r\n      return { loading: false, error: action.errorMessage };\r\n    case 'CLEAR':\r\n      return initialState;\r\n    default:\r\n      throw new Error('Should not be reached!');\r\n  }\r\n};\r\n\r\nconst useHttp = () => {\r\n  const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\r\n\r\n  const clear = useCallback(() => dispatchHttp({ type: 'CLEAR' }), []);\r\n\r\n  const sendRequest = useCallback(\r\n    (url, method, body, reqExtra, reqIdentifer) => {\r\n      dispatchHttp({ type: 'SEND', identifier: reqIdentifer });\r\n      fetch(url, {\r\n        method: method,\r\n        body: body,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(responseData => {\r\n          dispatchHttp({\r\n            type: 'RESPONSE',\r\n            responseData: responseData,\r\n            extra: reqExtra\r\n          });\r\n        })\r\n        .catch(error => {\r\n          dispatchHttp({\r\n            type: 'ERROR',\r\n            errorMessage: 'Something went wrong!'\r\n          });\r\n        });\r\n    },\r\n    []\r\n  );\r\n\r\n  return {\r\n    isLoading: httpState.loading,\r\n    data: httpState.data,\r\n    error: httpState.error,\r\n    sendRequest: sendRequest,\r\n    reqExtra: httpState.extra,\r\n    reqIdentifer: httpState.identifier,\r\n    clear: clear\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport useHttp from '../../hooks/http';\r\nimport './Search.css';\r\n\r\nconst Search = React.memo(props => {\r\n  const { onLoadIngredients } = props;\r\n  const [enteredFilter, setEnteredFilter] = useState('');\r\n  const inputRef = useRef();\r\n  const { isLoading, data, error, sendRequest, clear } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (enteredFilter === inputRef.current.value) {\r\n        const query =\r\n          enteredFilter.length === 0\r\n            ? ''\r\n            : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\r\n        sendRequest(\r\n          'https://react-hooks-update-e-default-rtdb.firebaseio.com/ingredients.json' + query,\r\n          'GET'\r\n        );\r\n      }\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [enteredFilter, inputRef, sendRequest]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !error && data) {\r\n      const loadedIngredients = [];\r\n      for (const key in data) {\r\n        loadedIngredients.push({\r\n          id: key,\r\n          title: data[key].title,\r\n          amount: data[key].amount\r\n        });\r\n      }\r\n      onLoadIngredients(loadedIngredients);\r\n    }\r\n  }, [data, isLoading, error, onLoadIngredients]);\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\r\n      <Card>\r\n        <div className=\"search-input\">\r\n          <label>Filter by Title</label>\r\n          {isLoading && <span>Loading...</span>}\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={enteredFilter}\r\n            onChange={event => setEnteredFilter(event.target.value)}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Search;\r\n","import React, { useReducer, useEffect, useCallback, useMemo } from 'react';\r\n\r\nimport IngredientForm from './IngredientForm';\r\nimport IngredientList from './IngredientList';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport Search from './Search';\r\nimport useHttp from '../../hooks/http';\r\n\r\nconst ingredientReducer = (currentIngredients, action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return action.ingredients;\r\n    case 'ADD':\r\n      return [...currentIngredients, action.ingredient];\r\n    case 'DELETE':\r\n      return currentIngredients.filter(ing => ing.id !== action.id);\r\n    default:\r\n      throw new Error('Should not get there!');\r\n  }\r\n};\r\n\r\nconst Ingredients = () => {\r\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\r\n  const {\r\n    isLoading,\r\n    error,\r\n    data,\r\n    sendRequest,\r\n    reqExtra,\r\n    reqIdentifer,\r\n    clear\r\n  } = useHttp();\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !error && reqIdentifer === 'REMOVE_INGREDIENT') {\r\n      dispatch({ type: 'DELETE', id: reqExtra });\r\n    } else if (!isLoading && !error && reqIdentifer === 'ADD_INGREDIENT') {\r\n      dispatch({\r\n        type: 'ADD',\r\n        ingredient: { id: data.name, ...reqExtra }\r\n      });\r\n    }\r\n  }, [data, reqExtra, reqIdentifer, isLoading, error]);\r\n\r\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\r\n    dispatch({ type: 'SET', ingredients: filteredIngredients });\r\n  }, []);\r\n\r\n  const addIngredientHandler = useCallback(ingredient => {\r\n    sendRequest(\r\n      'https://react-hooks-update-e-default-rtdb.firebaseio.com/ingredients.json',\r\n      'POST',\r\n      JSON.stringify(ingredient),\r\n      ingredient,\r\n      'ADD_INGREDIENT'\r\n    );\r\n  }, [sendRequest]);\r\n\r\n  const removeIngredientHandler = useCallback(\r\n    ingredientId => {\r\n      sendRequest(\r\n        `https://react-hooks-update-e-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\r\n        'DELETE',\r\n        null,\r\n        ingredientId,\r\n        'REMOVE_INGREDIENT'\r\n      );\r\n    },\r\n    [sendRequest]\r\n  );\r\n\r\n  const ingredientList = useMemo(() => {\r\n    return (\r\n      <IngredientList\r\n        ingredients={userIngredients}\r\n        onRemoveItem={removeIngredientHandler}\r\n      />\r\n    );\r\n  }, [userIngredients, removeIngredientHandler]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\r\n\r\n      <IngredientForm\r\n        onAddIngredient={addIngredientHandler}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <section>\r\n        <Search onLoadIngredients={filteredIngredientsHandler} />\r\n        {ingredientList}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ingredients;","import React, { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n  isAuth: false,\r\n  login: () => {}\r\n});\r\n\r\nconst AuthContextProvider = props => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const loginHandler = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ login: loginHandler, isAuth: isAuthenticated }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;","import React, { useContext } from 'react';\r\n\r\nimport Card from './UI/Card';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = props => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const loginHandler = () => {\r\n    authContext.login();\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <Card>\r\n        <h2>You are not authenticated!</h2>\r\n        <p>Please log in to continue.</p>\r\n        <button onClick={loginHandler}>Log In</button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useContext } from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport { AuthContext } from './context/auth-context';\n\nconst App = props => {\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />;\n  if (authContext.isAuth) {\n    content = <Ingredients />;\n  }\n\n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport AuthContextProvider from './context/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}